#pragma once

#if defined(__cplusplus)
extern "C" {
#endif //defined(__cplusplus)

#ifdef _WIN32
    #include <windows.h>
    #if !defined(ULONG_PTR)         //  usually defined in <BaseTsd.h>
        #if !defined(_WIN64)
            #define ULONG_PTR UINT
        #else
            #define ULONG_PTR UINT64
        #endif // !defined(_WIN64)
    #endif // !defined(ULONG_PTR)
#else
    #include <stdint.h>
    typedef int32_t LONG;     //  LONG  is assumed to be 4 Bytes
    typedef uint32_t UINT;     //  UINT  is assumed to be 4 Bytes
    typedef uintptr_t ULONG_PTR;
    #define __stdcall
#endif

#ifdef _WIN32
    #define RTC6_API __declspec(dllimport)
#else
    #define RTC6_API
#endif

EXPORT UINT __stdcall init_rtc6_dll(void);
EXPORT UINT __stdcall init_rtc5_dll(void);
EXPORT void __stdcall free_rtc6_dll(void);
EXPORT void __stdcall free_rtc5_dll(void);
EXPORT void __stdcall set_rtc4_mode(void);
EXPORT void __stdcall set_rtc5_mode(void);
EXPORT void __stdcall set_rtc6_mode(void);
EXPORT UINT __stdcall get_rtc_mode(void);
EXPORT UINT __stdcall get_error(void);
EXPORT UINT __stdcall get_last_error(void);
EXPORT void __stdcall reset_error(const UINT Code);
EXPORT UINT __stdcall rtc6_count_cards(void);
EXPORT UINT __stdcall rtc5_count_cards(void);
EXPORT UINT __stdcall acquire_rtc(const UINT CardNo);
EXPORT UINT __stdcall release_rtc(const UINT CardNo);
EXPORT UINT __stdcall select_rtc(const UINT CardNo);
EXPORT UINT __stdcall get_dll_version(void);
EXPORT UINT __stdcall get_serial_number(void);
EXPORT UINT __stdcall get_hex_version(void);
EXPORT UINT __stdcall get_rtc_version(void);
EXPORT UINT __stdcall get_bios_version(void);
EXPORT UINT __stdcall load_program_file(const char* Path);
EXPORT UINT __stdcall load_correction_file(const char* Name, const UINT No, const UINT Dim);
EXPORT void __stdcall select_cor_table(const UINT HeadA, const UINT HeadB);
EXPORT void __stdcall number_of_correction_tables(const UINT Number);
EXPORT UINT __stdcall get_list_space(void);
EXPORT void __stdcall set_start_list_pos(const UINT ListNo, const UINT Pos);
EXPORT void __stdcall set_start_list(const UINT ListNo);
EXPORT void __stdcall set_start_list_1(void);
EXPORT void __stdcall set_start_list_2(void);
EXPORT void __stdcall set_input_pointer(const UINT Pos);
EXPORT UINT __stdcall load_list(const UINT ListNo, const UINT Pos);
EXPORT void __stdcall get_list_pointer(UINT* ListNo, UINT* Pos);
EXPORT UINT __stdcall get_input_pointer(void);
EXPORT void __stdcall execute_list_pos(const UINT ListNo, const UINT Pos);
EXPORT void __stdcall execute_at_pointer(const UINT Pos);
EXPORT void __stdcall execute_list(const UINT ListNo);
EXPORT void __stdcall execute_list_1(void);
EXPORT void __stdcall execute_list_2(void);
EXPORT void __stdcall get_out_pointer(UINT* ListNo, UINT* Pos);
EXPORT void __stdcall auto_change_pos(const UINT Pos);
EXPORT void __stdcall start_loop(void);
EXPORT void __stdcall quit_loop(void);
EXPORT void __stdcall pause_list(void);
EXPORT void __stdcall restart_list(void);
EXPORT void __stdcall release_wait(void);
EXPORT void __stdcall stop_execution(void);
EXPORT void __stdcall auto_change(void);
EXPORT void __stdcall stop_list(void);
EXPORT UINT __stdcall get_wait_status(void);
EXPORT UINT __stdcall read_status(void);
EXPORT void __stdcall get_status(UINT* Status, UINT* Pos);
EXPORT void __stdcall set_max_counts(const UINT Counts);
EXPORT void __stdcall set_control_mode(const UINT Mode);
EXPORT UINT __stdcall get_counts(void);
EXPORT UINT __stdcall get_startstop_info(void);
EXPORT void __stdcall write_8bit_port(const UINT Value);
EXPORT UINT __stdcall read_io_port(void);
EXPORT UINT __stdcall get_io_status(void);
EXPORT void __stdcall write_da_x(const UINT x, const UINT Value);
EXPORT void __stdcall write_io_port(const UINT Value);
EXPORT void __stdcall write_da_1(const UINT Value);
EXPORT void __stdcall write_da_2(const UINT Value);
EXPORT void __stdcall disable_laser(void);
EXPORT void __stdcall enable_laser(void);
EXPORT void __stdcall laser_signal_on(void);
EXPORT void __stdcall laser_signal_off(void);
EXPORT void __stdcall set_standby(const UINT HalfPeriod, const UINT PulseLength);
EXPORT void __stdcall set_firstpulse_killer(const UINT Length);
EXPORT void __stdcall set_qswitch_delay(const UINT Delay);
EXPORT void __stdcall set_laser_mode(const UINT Mode);
EXPORT void __stdcall get_standby(UINT* HalfPeriod, UINT* PulseLength);
EXPORT double __stdcall get_time(void);
EXPORT void __stdcall set_defocus(const long Shift);
EXPORT void __stdcall goto_xyz(const long X, const long Y, const long Z);
EXPORT void __stdcall goto_xy(const long X, const long Y);
EXPORT void __stdcall set_offset(const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
EXPORT void __stdcall set_matrix(const UINT HeadNo, const double M11, const double M12, const double M21, const double M22, const UINT at_once);
EXPORT void __stdcall set_delay_mode(const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
EXPORT long __stdcall load_varpolydelay(const char* Name, const UINT No);
EXPORT void __stdcall list_nop(void);
EXPORT void __stdcall list_continue(void);
EXPORT void __stdcall list_next(void);
EXPORT void __stdcall long_delay(const UINT Delay);
EXPORT void __stdcall set_end_of_list(void);
EXPORT void __stdcall set_wait(const UINT WaitWord);
EXPORT void __stdcall set_list_jump(const UINT Pos);
EXPORT void __stdcall set_extstartpos_list(const UINT Pos);
EXPORT void __stdcall set_control_mode_list(const UINT Mode);
EXPORT void __stdcall list_return(void);
EXPORT void __stdcall list_call(const UINT Pos);
EXPORT void __stdcall list_call_cond(const UINT Mask1, const UINT Mask0, const UINT Pos);
EXPORT void __stdcall list_jump_cond(const UINT Mask1, const UINT Mask0, const UINT Pos);
EXPORT void __stdcall clear_io_cond_list(const UINT Mask1, const UINT Mask0, const UINT MaskClear);
EXPORT void __stdcall set_io_cond_list(const UINT Mask1, const UINT Mask0, const UINT MaskSet);
EXPORT void __stdcall write_8bit_port_list(const UINT Value);
EXPORT void __stdcall write_da_x_list(const UINT x, const UINT Value);
EXPORT void __stdcall write_io_port_list(const UINT Value);
EXPORT void __stdcall write_da_1_list(const UINT Value);
EXPORT void __stdcall write_da_2_list(const UINT Value);
EXPORT void __stdcall laser_signal_on_list(void);
EXPORT void __stdcall laser_signal_off_list(void);
EXPORT void __stdcall laser_on_list(const UINT Period);
EXPORT void __stdcall set_laser_delays(const long LaserOnDelay, const UINT LaserOffDelay);
EXPORT void __stdcall set_standby_list(const UINT HalfPeriod, const UINT PulseLength);
EXPORT void __stdcall set_laser_pulses(const UINT HalfPeriod, const UINT PulseLength);
EXPORT void __stdcall set_firstpulse_killer_list(const UINT Length);
EXPORT void __stdcall set_qswitch_delay_list(const UINT Delay);
EXPORT void __stdcall set_laser_timing(const UINT HalfPeriod, const UINT PulseLength1, const UINT PulseLength2, const UINT TimeBase);
EXPORT void __stdcall save_and_restart_timer(void);
EXPORT void __stdcall set_wobbel(const UINT Transversal, const UINT Longitudinal, const double Freq);
EXPORT void __stdcall timed_mark_abs_3d(const long X, const long Y, const long Z, const double T);
EXPORT void __stdcall timed_mark_rel_3d(const long dX, const long dY, const long dZ, const double T);
EXPORT void __stdcall timed_mark_abs(const long X, const long Y, const double T);
EXPORT void __stdcall timed_mark_rel(const long dX, const long dY, const double T);
EXPORT void __stdcall mark_abs_3d(const long X, const long Y, const long Z);
EXPORT void __stdcall mark_rel_3d(const long dX, const long dY, const long dZ);
EXPORT void __stdcall mark_abs(const long X, const long Y);
EXPORT void __stdcall mark_rel(const long dX, const long dY);
EXPORT void __stdcall timed_jump_abs_3d(const long X, const long Y, const long Z, const double T);
EXPORT void __stdcall timed_jump_rel_3d(const long dX, const long dY, const long dZ, const double T);
EXPORT void __stdcall timed_jump_abs(const long X, const long Y, const double T);
EXPORT void __stdcall timed_jump_rel(const long dX, const long dY, const double T);
EXPORT void __stdcall jump_abs_3d(const long X, const long Y, const long Z);
EXPORT void __stdcall jump_rel_3d(const long dX, const long dY, const long dZ);
EXPORT void __stdcall jump_abs(const long X, const long Y);
EXPORT void __stdcall jump_rel(const long dX, const long dY);
EXPORT void __stdcall set_defocus_list(const long Shift);
EXPORT void __stdcall timed_arc_abs(const long X, const long Y, const double Angle, const double T);
EXPORT void __stdcall timed_arc_rel(const long dX, const long dY, const double Angle, const double T);
EXPORT void __stdcall arc_abs_3d(const long X, const long Y, const long Z, const double Angle);
EXPORT void __stdcall arc_rel_3d(const long dX, const long dY, const long dZ, const double Angle);
EXPORT void __stdcall arc_abs(const long X, const long Y, const double Angle);
EXPORT void __stdcall arc_rel(const long dX, const long dY, const double Angle);
EXPORT void __stdcall set_ellipse(const UINT A, const UINT B, const double Phi0, const double Phi);
EXPORT void __stdcall mark_ellipse_abs(const long X, const long Y, const double Alpha);
EXPORT void __stdcall mark_ellipse_rel(const long dX, const long dY, const double Alpha);
EXPORT void __stdcall set_offset_list(const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
EXPORT void __stdcall set_matrix_list(const UINT HeadNo, const UINT Ind1, const UINT Ind2, const double Mij, const UINT at_once);
EXPORT void __stdcall set_mark_speed(const double Speed);
EXPORT void __stdcall set_jump_speed(const double Speed);
EXPORT void __stdcall set_scanner_delays(const UINT Jump, const UINT Mark, const UINT Polygon);
EXPORT UINT __stdcall n_get_last_error(const UINT CardNo);
EXPORT void __stdcall n_reset_error(const UINT CardNo, const UINT Code);
EXPORT UINT __stdcall n_get_serial_number(const UINT CardNo);
EXPORT void __stdcall set_angle(const UINT HeadNo, const double Angle, const UINT at_once);
EXPORT void __stdcall set_scale(const UINT HeadNo, const double Scale, const UINT at_once);
EXPORT void __stdcall set_laser_control(const UINT Ctrl);
EXPORT long __stdcall get_value(const long Signal);
EXPORT void __stdcall config_list(const UINT Mem1, const UINT Mem2);
EXPORT void CALLBACK set_rot_center (long lCX,long lCY);
EXPORT void CALLBACK set_rot_center_list (long lCX,long lCY);
EXPORT void CALLBACK set_fly_rot (double dResolution);
EXPORT void __stdcall set_sky_writing_para(const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
EXPORT void __stdcall set_sky_writing(const double Timelag, const long LaserOnShift);
EXPORT void __stdcall set_sky_writing_limit(const double CosAngle);
EXPORT void __stdcall set_sky_writing_mode(const UINT Mode);
EXPORT void __stdcall set_sky_writing_para_list(const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
EXPORT void __stdcall set_sky_writing_list(const double Timelag, const long LaserOnShift);
EXPORT void __stdcall set_sky_writing_limit_list(const double CosAngle);
EXPORT void __stdcall set_sky_writing_mode_list(const UINT Mode);


//===================================================================================================
/*
EXPORT void __stdcall timed_para_mark_abs_3d(const long X, const long Y, const long Z, const UINT P, const double T);
EXPORT void __stdcall timed_para_mark_rel_3d(const long dX, const long dY, const long dZ, const UINT P, const double T);
EXPORT void __stdcall timed_para_jump_abs_3d(const long X, const long Y, const long Z, const UINT P, const double T);
EXPORT void __stdcall timed_para_jump_rel_3d(const long dX, const long dY, const long dZ, const UINT P, const double T);
EXPORT void __stdcall timed_para_mark_abs(const long X, const long Y, const UINT P, const double T);
EXPORT void __stdcall timed_para_mark_rel(const long dX, const long dY, const UINT P, const double T);
EXPORT void __stdcall timed_para_jump_abs(const long X, const long Y, const UINT P, const double T);
EXPORT void __stdcall timed_para_jump_rel(const long dX, const long dY, const UINT P, const double T);
EXPORT void __stdcall load_sub(const UINT Index);
EXPORT void __stdcall set_jump_mode_list(const long Flag);
EXPORT void __stdcall set_delay_mode_list(const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
EXPORT void __stdcall set_angle_list(const UINT HeadNo, const double Angle, const UINT at_once);
EXPORT void __stdcall set_scale_list(const UINT HeadNo, const double Scale, const UINT at_once);
EXPORT void __stdcall set_offset_xyz_list(const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
EXPORT void __stdcall set_defocus_offset_list(const long Shift);
EXPORT void __stdcall set_pixel_line_3d(const UINT Channel, const UINT HalfPeriod, const double dX, const double dY, const double dZ);
EXPORT void __stdcall set_pixel_line(const UINT Channel, const UINT HalfPeriod, const double dX, const double dY);
EXPORT void __stdcall set_n_pixel(const UINT PortOutValue1, const UINT PortOutValue2, const UINT Number);
EXPORT void __stdcall set_pixel(const UINT PortOutValue1, const UINT PortOutValue2);
EXPORT void __stdcall set_wobbel_mode_phase(const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode, const double Phase);
EXPORT void __stdcall set_wobbel_mode(const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode);
EXPORT void __stdcall set_wobbel_direction(const long dX, const long dY);
EXPORT void __stdcall set_wobbel_control(const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
EXPORT void __stdcall set_wobbel_vector(const double dTrans, const double dLong, const UINT Period, const double dPower);
EXPORT void __stdcall set_wobbel_offset(const long OffsetTrans, const long OffsetLong);
EXPORT void __stdcall fly_return_z(const long X, const long Y, const long Z);
EXPORT void __stdcall fly_return(const long X, const long Y);
EXPORT void __stdcall set_rot_center_list(const long X, const long Y);
EXPORT void __stdcall set_ext_start_delay_list(const long Delay, const UINT EncoderNo);
EXPORT void __stdcall set_fly_x(const double ScaleX);
EXPORT void __stdcall set_fly_y(const double ScaleY);
EXPORT void __stdcall set_fly_z(const double ScaleZ, const UINT EncoderNo);
EXPORT void __stdcall set_fly_rot(const double Resolution);
EXPORT void __stdcall set_fly_x_pos(const double ScaleX);
EXPORT void __stdcall set_fly_y_pos(const double ScaleY);
EXPORT void __stdcall set_fly_rot_pos(const double Resolution);
EXPORT void __stdcall set_fly_limits(const long Xmin, const long Xmax, const long Ymin, const long Ymax);
EXPORT void __stdcall set_fly_limits_z(const long Zmin, const long Zmax);
EXPORT void __stdcall if_fly_x_overflow(const long Mode);
EXPORT void __stdcall if_fly_y_overflow(const long Mode);
EXPORT void __stdcall if_fly_z_overflow(const long Mode);
EXPORT void __stdcall if_not_fly_x_overflow(const long Mode);
EXPORT void __stdcall if_not_fly_y_overflow(const long Mode);
EXPORT void __stdcall if_not_fly_z_overflow(const long Mode);
EXPORT void __stdcall clear_fly_overflow(const UINT Mode);
EXPORT void __stdcall wait_for_encoder_mode(const long Value, const UINT EncoderNo, const long Mode);
EXPORT void __stdcall set_encoder_speed(const UINT EncoderNo, const double Speed, const double Smooth);
EXPORT void __stdcall store_encoder(const UINT Pos);
EXPORT void __stdcall wait_for_encoder_in_range(const long EncXmin, const long EncXmax, const long EncYmin, const long EncYmax);
EXPORT void __stdcall activate_fly_xy(const double ScaleX, const double ScaleY);
EXPORT void __stdcall activate_fly_xy_encoder(const double ScaleX, const double ScaleY, const long EncX, const long EncY);
EXPORT void __stdcall if_not_activated(void);
EXPORT void __stdcall wait_for_encoder(const long Value, const UINT EncoderNo);
EXPORT void __stdcall set_laser_pin_out_list(const UINT Pins);
EXPORT void __stdcall set_softstart_level_list(const UINT Index, const UINT Level1, const UINT Level2, const UINT Level3);
EXPORT void __stdcall set_softstart_mode_list(const UINT Mode, const UINT Number, const UINT Delay);
EXPORT void __stdcall para_laser_on_pulses_list(const UINT Period, const UINT Pulses, const UINT P);
EXPORT void __stdcall laser_on_pulses_list(const UINT Period, const UINT Pulses);
EXPORT void __stdcall write_io_port_mask_list(const UINT Value, const UINT Mask);
EXPORT void __stdcall sub_call_abs_cond(const UINT Mask1, const UINT Mask0, const UINT Index);
EXPORT void __stdcall list_jump_pos_cond(const UINT Mask1, const UINT Mask0, const UINT Pos);
EXPORT void __stdcall list_jump_rel_cond(const UINT Mask1, const UINT Mask0, const long Pos);
EXPORT void __stdcall if_cond(const UINT Mask1, const UINT Mask0);
EXPORT void __stdcall if_not_cond(const UINT Mask1, const UINT Mask0);
EXPORT void __stdcall switch_ioport(const UINT MaskBits, const UINT ShiftBits);
EXPORT void __stdcall list_call_repeat(const UINT Pos, const UINT Number);
EXPORT void __stdcall list_call_abs_repeat(const UINT Pos, const UINT Number);
EXPORT void __stdcall list_call_abs(const UINT Pos);
EXPORT void __stdcall sub_call_repeat(const UINT Index, const UINT Number);
EXPORT void __stdcall sub_call_abs_repeat(const UINT Index, const UINT Number);
EXPORT void __stdcall sub_call(const UINT Index);
EXPORT void __stdcall sub_call_abs(const UINT Index);
EXPORT void __stdcall list_call_abs_cond(const UINT Mask1, const UINT Mask0, const UINT Pos);
EXPORT void __stdcall sub_call_cond(const UINT Mask1, const UINT Mask0, const UINT Index);
EXPORT void __stdcall list_jump_pos(const UINT Pos);
EXPORT void __stdcall list_jump_rel(const long Pos);
EXPORT void __stdcall list_repeat(void);
EXPORT void __stdcall list_until(const UINT Number);
EXPORT void __stdcall simulate_ext_start(const long Delay, const UINT EncoderNo);
EXPORT void __stdcall set_jump_speed_ctrl(const double Speed);
EXPORT void __stdcall set_mark_speed_ctrl(const double Speed);
EXPORT void __stdcall send_user_data(const UINT Head, const UINT Axis, const long Data0, const long Data1, const long Data2, const long Data3, const long Data4);
EXPORT long __stdcall read_user_data(const UINT Head, const UINT Axis, long* Data0, long* Data1, long* Data2, long* Data3, long* Data4);
EXPORT long __stdcall set_jump_mode(const long Flag, const UINT Length, const long VA1, const long VA2, const long VB1, const long VB2, const long JA1, const long JA2, const long JB1, const long JB2);
EXPORT void __stdcall select_cor_table_list(const UINT HeadA, const UINT HeadB);
EXPORT double __stdcall get_lap_time(void);
EXPORT void __stdcall home_position_xyz(const long XHome, const long YHome, const long ZHome);
EXPORT void __stdcall home_position(const long XHome, const long YHome);
EXPORT UINT __stdcall get_overrun(void);
EXPORT void __stdcall set_defocus_offset(const long Shift);
EXPORT void __stdcall set_laser_power(const UINT Port, const UINT Value);
EXPORT void __stdcall set_port_default_list(const UINT Port, const UINT Value);
EXPORT void __stdcall set_ext_start_delay(const long Delay, const UINT EncoderNo);
EXPORT void __stdcall set_rot_center(const long X, const long Y);
EXPORT void __stdcall simulate_encoder(const UINT EncoderNo);
EXPORT UINT __stdcall get_marking_info(void);
EXPORT void __stdcall get_encoder(long* Encoder0, long* Encoder1);
EXPORT void __stdcall read_encoder(long* Encoder0_1, long* Encoder1_1, long* Encoder0_2, long* Encoder1_2);
EXPORT void __stdcall simulate_ext_stop(void);
EXPORT void __stdcall simulate_ext_start_ctrl(void);
EXPORT UINT __stdcall get_sub_pointer(const UINT Index);
EXPORT void __stdcall write_io_port_mask(const UINT Value, const UINT Mask);
EXPORT UINT __stdcall read_io_port_buffer(const UINT Index, UINT* Value, long* XPos, long* YPos, UINT* Time);
EXPORT void __stdcall set_laser_off_default(const UINT AnalogOut1, const UINT AnalogOut2, const UINT DigitalOut);
EXPORT void __stdcall set_port_default(const UINT Port, const UINT Value);
EXPORT void __stdcall set_laser_pulses_ctrl(const UINT HalfPeriod, const UINT PulseLength);
EXPORT void __stdcall set_laser_pin_out(const UINT Pins);
EXPORT UINT __stdcall get_laser_pin_in(void);
EXPORT void __stdcall set_pause_list_cond(const UINT Mask1, const UINT Mask0);
EXPORT void __stdcall set_offset_xyz(const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
EXPORT void __stdcall set_extstartpos(const UINT Pos);
EXPORT void __stdcall read_io_port_list(void);
EXPORT void __stdcall set_softstart_level(const UINT Index, const UINT Level);
EXPORT void __stdcall set_softstart_mode(const UINT Mode, const UINT Number, const UINT Delay);

*/

//===================================================================================================
//EXPORT UINT __stdcall n_get_error(const UINT CardNo);
//EXPORT UINT __stdcall n_get_hex_version(const UINT CardNo);
//EXPORT UINT __stdcall n_get_rtc_version(const UINT CardNo);
//EXPORT UINT __stdcall n_get_bios_version(const UINT CardNo);
//EXPORT UINT __stdcall n_load_program_file(const UINT CardNo, const char* Path);
//EXPORT UINT __stdcall n_load_correction_file(const UINT CardNo, const char* Name, const UINT No, const UINT Dim);
//EXPORT void __stdcall n_select_cor_table(const UINT CardNo, const UINT HeadA, const UINT HeadB);
//EXPORT void __stdcall n_number_of_correction_tables(const UINT CardNo, const UINT Number);
//EXPORT UINT __stdcall n_get_list_space(const UINT CardNo);
//EXPORT void __stdcall n_set_start_list_pos(const UINT CardNo, const UINT ListNo, const UINT Pos);
//EXPORT void __stdcall n_set_start_list(const UINT CardNo, const UINT ListNo);
//EXPORT void __stdcall n_set_start_list_1(const UINT CardNo);
//EXPORT void __stdcall n_set_start_list_2(const UINT CardNo);
//EXPORT void __stdcall n_set_input_pointer(const UINT CardNo, const UINT Pos);
//EXPORT UINT __stdcall n_load_list(const UINT CardNo, const UINT ListNo, const UINT Pos);
//EXPORT void __stdcall n_load_sub(const UINT CardNo, const UINT Index);
//EXPORT void __stdcall n_get_list_pointer(const UINT CardNo, UINT* ListNo, UINT* Pos);
//EXPORT UINT __stdcall n_get_input_pointer(const UINT CardNo);
//EXPORT void __stdcall n_execute_list_pos(const UINT CardNo, const UINT ListNo, const UINT Pos);
//EXPORT void __stdcall n_execute_at_pointer(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_execute_list(const UINT CardNo, const UINT ListNo);
//EXPORT void __stdcall n_execute_list_1(const UINT CardNo);
//EXPORT void __stdcall n_execute_list_2(const UINT CardNo);
//EXPORT void __stdcall n_get_out_pointer(const UINT CardNo, UINT* ListNo, UINT* Pos);
//EXPORT void __stdcall n_auto_change_pos(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_start_loop(const UINT CardNo);
//EXPORT void __stdcall n_quit_loop(const UINT CardNo);
//EXPORT void __stdcall n_pause_list(const UINT CardNo);
//EXPORT void __stdcall n_restart_list(const UINT CardNo);
//EXPORT void __stdcall n_release_wait(const UINT CardNo);
//EXPORT void __stdcall n_stop_execution(const UINT CardNo);
//EXPORT void __stdcall n_set_pause_list_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0);
//EXPORT void __stdcall n_auto_change(const UINT CardNo);
//EXPORT void __stdcall n_stop_list(const UINT CardNo);
//EXPORT UINT __stdcall n_get_wait_status(const UINT CardNo);
//EXPORT UINT __stdcall n_read_status(const UINT CardNo);
//EXPORT void __stdcall n_get_status(const UINT CardNo, UINT* Status, UINT* Pos);
//EXPORT void __stdcall n_set_extstartpos(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_set_max_counts(const UINT CardNo, const UINT Counts);
//EXPORT void __stdcall n_set_control_mode(const UINT CardNo, const UINT Mode);
//EXPORT void __stdcall n_simulate_ext_stop(const UINT CardNo);
//EXPORT void __stdcall n_simulate_ext_start_ctrl(const UINT CardNo);
//EXPORT UINT __stdcall n_get_counts(const UINT CardNo);
//EXPORT UINT __stdcall n_get_startstop_info(const UINT CardNo);
//EXPORT void __stdcall n_set_sub_pointer(const UINT CardNo, const UINT Index, const UINT Pos);
//EXPORT UINT __stdcall n_get_sub_pointer(const UINT CardNo, const UINT Index);
//EXPORT void __stdcall n_write_io_port_mask(const UINT CardNo, const UINT Value, const UINT Mask);
//EXPORT void __stdcall n_write_8bit_port(const UINT CardNo, const UINT Value);
//EXPORT UINT __stdcall n_read_io_port(const UINT CardNo);
//EXPORT UINT __stdcall n_read_io_port_buffer(const UINT CardNo, const UINT Index, UINT* Value, long* XPos, long* YPos, UINT* Time);
//EXPORT UINT __stdcall n_get_io_status(const UINT CardNo);
//EXPORT void __stdcall n_write_da_x(const UINT CardNo, const UINT x, const UINT Value);
//EXPORT void __stdcall n_set_laser_off_default(const UINT CardNo, const UINT AnalogOut1, const UINT AnalogOut2, const UINT DigitalOut);
//EXPORT void __stdcall n_set_port_default(const UINT CardNo, const UINT Port, const UINT Value);
//EXPORT void __stdcall n_write_io_port(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_write_da_1(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_write_da_2(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_disable_laser(const UINT CardNo);
//EXPORT void __stdcall n_enable_laser(const UINT CardNo);
//EXPORT void __stdcall n_laser_signal_on(const UINT CardNo);
//EXPORT void __stdcall n_laser_signal_off(const UINT CardNo);
//EXPORT void __stdcall n_set_standby(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
//EXPORT void __stdcall n_set_laser_pulses_ctrl(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
//EXPORT void __stdcall n_set_firstpulse_killer(const UINT CardNo, const UINT Length);
//EXPORT void __stdcall n_set_qswitch_delay(const UINT CardNo, const UINT Delay);
//EXPORT void __stdcall n_set_laser_mode(const UINT CardNo, const UINT Mode);
//EXPORT void __stdcall n_set_laser_control(const UINT CardNo, const UINT Ctrl);
//EXPORT void __stdcall n_set_softstart_level(const UINT CardNo, const UINT Index, const UINT Level);
//EXPORT void __stdcall n_set_softstart_mode(const UINT CardNo, const UINT Mode, const UINT Number, const UINT Delay);
//EXPORT void __stdcall n_get_standby(const UINT CardNo, UINT* HalfPeriod, UINT* PulseLength);
//EXPORT void __stdcall n_set_laser_power(const UINT CardNo, const UINT Port, const UINT Value);
//EXPORT void __stdcall n_set_port_default_list(const UINT CardNo, const UINT Port, const UINT Value);
//EXPORT void __stdcall n_set_ext_start_delay(const UINT CardNo, const long Delay, const UINT EncoderNo);
//EXPORT void __stdcall n_set_rot_center(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_simulate_encoder(const UINT CardNo, const UINT EncoderNo);
//EXPORT UINT __stdcall n_get_marking_info(const UINT CardNo);
//EXPORT void __stdcall n_get_encoder(const UINT CardNo, long* Encoder0, long* Encoder1);
//EXPORT void __stdcall n_read_encoder(const UINT CardNo, long* Encoder0_1, long* Encoder1_1, long* Encoder0_2, long* Encoder1_2);
//EXPORT double __stdcall n_get_time(const UINT CardNo);
//EXPORT double __stdcall n_get_lap_time(const UINT CardNo);
//EXPORT void __stdcall n_home_position_xyz(const UINT CardNo, const long XHome, const long YHome, const long ZHome);
//EXPORT void __stdcall n_home_position(const UINT CardNo, const long XHome, const long YHome);
//EXPORT UINT __stdcall n_get_overrun(const UINT CardNo);
//EXPORT void __stdcall n_set_defocus(const UINT CardNo, const long Shift);
//EXPORT void __stdcall n_set_defocus_offset(const UINT CardNo, const long Shift);
//EXPORT void __stdcall n_goto_xyz(const UINT CardNo, const long X, const long Y, const long Z);
//EXPORT void __stdcall n_goto_xy(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_set_offset_xyz(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
//EXPORT void __stdcall n_set_offset(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
//EXPORT void __stdcall n_set_matrix(const UINT CardNo, const UINT HeadNo, const double M11, const double M12, const double M21, const double M22, const UINT at_once);
//EXPORT void __stdcall n_set_angle(const UINT CardNo, const UINT HeadNo, const double Angle, const UINT at_once);
//EXPORT void __stdcall n_set_scale(const UINT CardNo, const UINT HeadNo, const double Scale, const UINT at_once);
//EXPORT void __stdcall n_set_delay_mode(const UINT CardNo, const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
//EXPORT void __stdcall n_set_jump_speed_ctrl(const UINT CardNo, const double Speed);
//EXPORT void __stdcall n_set_mark_speed_ctrl(const UINT CardNo, const double Speed);
//EXPORT void __stdcall n_set_sky_writing_para(const UINT CardNo, const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
//EXPORT void __stdcall n_set_sky_writing_limit(const UINT CardNo, const double CosAngle);
//EXPORT void __stdcall n_set_sky_writing_mode(const UINT CardNo, const UINT Mode);
//EXPORT long __stdcall n_load_varpolydelay(const UINT CardNo, const char* Name, const UINT No);
//EXPORT void __stdcall n_set_sky_writing(const UINT CardNo, const double Timelag, const long LaserOnShift);
//EXPORT void __stdcall n_send_user_data(const UINT CardNo, const UINT Head, const UINT Axis, const long Data0, const long Data1, const long Data2, const long Data3, const long Data4);
//EXPORT long __stdcall n_read_user_data(const UINT CardNo, const UINT Head, const UINT Axis, long* Data0, long* Data1, long* Data2, long* Data3, long* Data4);
//EXPORT UINT __stdcall n_get_head_status(const UINT CardNo, const UINT Head);
//EXPORT long __stdcall n_set_jump_mode(const UINT CardNo, const long Flag, const UINT Length, const long VA1, const long VA2, const long VB1, const long VB2, const long JA1, const long JA2, const long JB1, const long JB2);
//EXPORT void __stdcall n_list_nop(const UINT CardNo);
//EXPORT void __stdcall n_list_continue(const UINT CardNo);
//EXPORT void __stdcall n_list_next(const UINT CardNo);
//EXPORT void __stdcall n_long_delay(const UINT CardNo, const UINT Delay);
//EXPORT void __stdcall n_set_end_of_list(const UINT CardNo);
//EXPORT void __stdcall n_set_wait(const UINT CardNo, const UINT WaitWord);
//EXPORT void __stdcall n_list_jump_pos(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_list_jump_rel(const UINT CardNo, const long Pos);
//EXPORT void __stdcall n_list_repeat(const UINT CardNo);
//EXPORT void __stdcall n_list_until(const UINT CardNo, const UINT Number);
//EXPORT void __stdcall n_set_list_jump(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_set_extstartpos_list(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_set_control_mode_list(const UINT CardNo, const UINT Mode);
//EXPORT void __stdcall n_simulate_ext_start(const UINT CardNo, const long Delay, const UINT EncoderNo);
//EXPORT void __stdcall n_list_return(const UINT CardNo);
//EXPORT void __stdcall n_list_call_repeat(const UINT CardNo, const UINT Pos, const UINT Number);
//EXPORT void __stdcall n_list_call_abs_repeat(const UINT CardNo, const UINT Pos, const UINT Number);
//EXPORT void __stdcall n_list_call(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_list_call_abs(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_sub_call_repeat(const UINT CardNo, const UINT Index, const UINT Number);
//EXPORT void __stdcall n_sub_call_abs_repeat(const UINT CardNo, const UINT Index, const UINT Number);
//EXPORT void __stdcall n_sub_call(const UINT CardNo, const UINT Index);
//EXPORT void __stdcall n_sub_call_abs(const UINT CardNo, const UINT Index);
//EXPORT void __stdcall n_list_call_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
//EXPORT void __stdcall n_list_call_abs_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
//EXPORT void __stdcall n_sub_call_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
//EXPORT void __stdcall n_sub_call_abs_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
//EXPORT void __stdcall n_list_jump_pos_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Index);
//EXPORT void __stdcall n_list_jump_rel_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const long Index);
//EXPORT void __stdcall n_if_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0);
//EXPORT void __stdcall n_if_not_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0);
//EXPORT void __stdcall n_switch_ioport(const UINT CardNo, const UINT MaskBits, const UINT ShiftBits);
//EXPORT void __stdcall n_list_jump_cond(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
//EXPORT void __stdcall n_clear_io_cond_list(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Mask);
//EXPORT void __stdcall n_set_io_cond_list(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Mask);
//EXPORT void __stdcall n_write_io_port_mask_list(const UINT CardNo, const UINT Value, const UINT Mask);
//EXPORT void __stdcall n_write_8bit_port_list(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_read_io_port_list(const UINT CardNo);
//EXPORT void __stdcall n_write_da_x_list(const UINT CardNo, const UINT x, const UINT Value);
//EXPORT void __stdcall n_write_io_port_list(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_write_da_1_list(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_write_da_2_list(const UINT CardNo, const UINT Value);
//EXPORT void __stdcall n_laser_signal_on_list(const UINT CardNo);
//EXPORT void __stdcall n_laser_signal_off_list(const UINT CardNo);
//EXPORT void __stdcall n_para_laser_on_pulses_list(const UINT CardNo, const UINT Period, const UINT Pulses, const UINT P);
//EXPORT void __stdcall n_laser_on_pulses_list(const UINT CardNo, const UINT Period, const UINT Pulses);
//EXPORT void __stdcall n_laser_on_list(const UINT CardNo, const UINT Period);
//EXPORT void __stdcall n_set_laser_delays(const UINT CardNo, const long LaserOnDelay, const UINT LaserOffDelay);
//EXPORT void __stdcall n_set_standby_list(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
//EXPORT void __stdcall n_set_laser_pulses(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
//EXPORT void __stdcall n_set_firstpulse_killer_list(const UINT CardNo, const UINT Length);
//EXPORT void __stdcall n_set_qswitch_delay_list(const UINT CardNo, const UINT Delay);
//EXPORT void __stdcall n_set_laser_pin_out_list(const UINT CardNo, const UINT Pins);
//EXPORT void __stdcall n_set_softstart_level_list(const UINT CardNo, const UINT Index, const UINT Level1, const UINT Level2, const UINT Level3);
//EXPORT void __stdcall n_set_softstart_mode_list(const UINT CardNo, const UINT Mode, const UINT Number, const UINT Delay);
//EXPORT void __stdcall n_set_laser_timing(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength1, const UINT PulseLength2, const UINT TimeBase);
//EXPORT void __stdcall n_fly_return_z(const UINT CardNo, const long X, const long Y, const long Z);
//EXPORT void __stdcall n_fly_return(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_set_rot_center_list(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_set_ext_start_delay_list(const UINT CardNo, const long Delay, const UINT EncoderNo);
//EXPORT void __stdcall n_set_fly_x(const UINT CardNo, const double ScaleX);
//EXPORT void __stdcall n_set_fly_y(const UINT CardNo, const double ScaleY);
//EXPORT void __stdcall n_set_fly_z(const UINT CardNo, const double ScaleZ, const UINT EndoderNo);
//EXPORT void __stdcall n_set_fly_rot(const UINT CardNo, const double Resolution);
//EXPORT void __stdcall n_set_fly_x_pos(const UINT CardNo, const double ScaleX);
//EXPORT void __stdcall n_set_fly_y_pos(const UINT CardNo, const double ScaleY);
//EXPORT void __stdcall n_set_fly_rot_pos(const UINT CardNo, const double Resolution);
//EXPORT void __stdcall n_set_fly_limits(const UINT CardNo, const long Xmin, const long Xmax, const long Ymin, const long Ymax);
//EXPORT void __stdcall n_set_fly_limits_z(const UINT CardNo, const long Zmin, const long Zmax);
//EXPORT void __stdcall n_if_fly_x_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_if_fly_y_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_if_fly_z_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_if_not_fly_x_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_if_not_fly_y_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_if_not_fly_z_overflow(const UINT CardNo, const long Mode);
//EXPORT void __stdcall n_clear_fly_overflow(const UINT CardNo, const UINT Mode);
//EXPORT void __stdcall n_wait_for_encoder_mode(const UINT CardNo, const long Value, const UINT EncoderNo, const long Mode);
//EXPORT void __stdcall n_set_encoder_speed(const UINT CardNo, const UINT EncoderNo, const double Speed, const double Smooth);
//EXPORT void __stdcall n_store_encoder(const UINT CardNo, const UINT Pos);
//EXPORT void __stdcall n_wait_for_encoder_in_range(const UINT CardNo, const long EncXmin, const long EncXmax, const long EncYmin, const long EncYmax);
//EXPORT void __stdcall n_activate_fly_xy(const UINT CardNo, const double ScaleX, const double ScaleY);
//EXPORT void __stdcall n_activate_fly_xy_encoder(const UINT CardNo, const double ScaleX, const double ScaleY, const long EncX, const long EncY);
//EXPORT void __stdcall n_if_not_activated(const UINT CardNo);
//EXPORT void __stdcall n_park_position(const UINT CardNo, const UINT Mode, const long X, const long Y);
//EXPORT void __stdcall n_park_return(const UINT CardNo, const UINT Mode, const long X, const long Y);
//EXPORT void __stdcall n_wait_for_encoder(const UINT CardNo, const long Value, const UINT EncoderNo);
//EXPORT void __stdcall n_save_and_restart_timer(const UINT CardNo);
//EXPORT void __stdcall n_set_wobbel_mode_phase(const UINT CardNo, const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode, const double Phase);
//EXPORT void __stdcall n_set_wobbel_mode(const UINT CardNo, const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode);
//EXPORT void __stdcall n_set_wobbel(const UINT CardNo, const UINT Transversal, const UINT Longitudinal, const double Freq);
//EXPORT void __stdcall n_set_wobbel_direction(const UINT CardNo, const long dX, const long dY);
//EXPORT void __stdcall n_set_wobbel_control(const UINT CardNo, const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
//EXPORT void __stdcall n_set_wobbel_vector(const UINT CardNo, const double dTrans, const double dLong, const UINT Period, const double dPower);
//EXPORT void __stdcall n_set_wobbel_offset(const UINT CardNo, const long OffsetTrans, const long OffsetLong);
//EXPORT void __stdcall n_set_pixel_line_3d(const UINT CardNo, const UINT Channel, const UINT HalfPeriod, const double dX, const double dY, const double dZ);
//EXPORT void __stdcall n_set_pixel_line(const UINT CardNo, const UINT Channel, const UINT HalfPeriod, const double dX, const double dY);
//EXPORT void __stdcall n_set_n_pixel(const UINT CardNo, const UINT PortOutValue1, const UINT PortOutValue2, const UINT Number);
//EXPORT void __stdcall n_set_pixel(const UINT CardNo, const UINT PortOutValue1, const UINT PortOutValue2);
//EXPORT void __stdcall n_timed_mark_abs_3d(const UINT CardNo, const long X, const long Y, const long Z, const double T);
//EXPORT void __stdcall n_timed_mark_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ, const double T);
//EXPORT void __stdcall n_timed_mark_abs(const UINT CardNo, const long X, const long Y, const double T);
//EXPORT void __stdcall n_timed_mark_rel(const UINT CardNo, const long dX, const long dY, const double T);
//EXPORT void __stdcall n_timed_jump_abs_3d(const UINT CardNo, const long X, const long Y, const long Z, const double T);
//EXPORT void __stdcall n_timed_jump_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ, const double T);
//EXPORT void __stdcall n_timed_jump_abs(const UINT CardNo, const long X, const long Y, const double T);
//EXPORT void __stdcall n_timed_jump_rel(const UINT CardNo, const long dX, const long dY, const double T);
//EXPORT void __stdcall n_timed_para_mark_abs_3d(const UINT CardNo, const long X, const long Y, const long Z, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_mark_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_jump_abs_3d(const UINT CardNo, const long X, const long Y, const long Z, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_jump_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_mark_abs(const UINT CardNo, const long X, const long Y, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_mark_rel(const UINT CardNo, const long dX, const long dY, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_jump_abs(const UINT CardNo, const long X, const long Y, const UINT P, const double T);
//EXPORT void __stdcall n_timed_para_jump_rel(const UINT CardNo, const long dX, const long dY, const UINT P, const double T);
//EXPORT void __stdcall n_set_defocus_list(const UINT CardNo, const long Shift);
//EXPORT void __stdcall n_set_defocus_offset_list(const UINT CardNo, const long Shift);
//EXPORT void __stdcall n_timed_arc_abs(const UINT CardNo, const long X, const long Y, const double Angle, const double T);
//EXPORT void __stdcall n_timed_arc_rel(const UINT CardNo, const long dX, const long dY, const double Angle, const double T);
//EXPORT void __stdcall n_arc_abs_3d(const UINT CardNo, const long X, const long Y, const long Z, const double Angle);
//EXPORT void __stdcall n_arc_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ, const double Angle);
//EXPORT void __stdcall n_arc_abs(const UINT CardNo, const long X, const long Y, const double Angle);
//EXPORT void __stdcall n_arc_rel(const UINT CardNo, const long dX, const long dY, const double Angle);
//EXPORT void __stdcall n_set_ellipse(const UINT CardNo, const UINT A, const UINT B, const double Phi0, const double Phi);
//EXPORT void __stdcall n_mark_ellipse_abs(const UINT CardNo, const long X, const long Y, const double Alpha);
//EXPORT void __stdcall n_mark_ellipse_rel(const UINT CardNo, const long dX, const long dY, const double Alpha);
//EXPORT void __stdcall n_set_offset_xyz_list(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
//EXPORT void __stdcall n_set_offset_list(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
//EXPORT void __stdcall n_set_matrix_list(const UINT CardNo, const UINT HeadNo, const UINT Ind1, const UINT Ind2, const double Mij, const UINT at_once);
//EXPORT void __stdcall n_set_angle_list(const UINT CardNo, const UINT HeadNo, const double Angle, const UINT at_once);
//EXPORT void __stdcall n_set_scale_list(const UINT CardNo, const UINT HeadNo, const double Scale, const UINT at_once);
//EXPORT void __stdcall n_set_mark_speed(const UINT CardNo, const double Speed);
//EXPORT void __stdcall n_set_jump_speed(const UINT CardNo, const double Speed);
//EXPORT void __stdcall n_set_sky_writing_para_list(const UINT CardNo, const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
//EXPORT void __stdcall n_set_sky_writing_list(const UINT CardNo, const double Timelag, const long LaserOnShift);
//EXPORT void __stdcall n_set_sky_writing_limit_list(const UINT CardNo, const double CosAngle);
//EXPORT void __stdcall n_set_sky_writing_mode_list(const UINT CardNo, const UINT Mode);
//EXPORT void __stdcall n_set_scanner_delays(const UINT CardNo, const UINT Jump, const UINT Mark, const UINT Polygon);
//EXPORT void __stdcall n_set_jump_mode_list(const UINT CardNo, const long Flag);
//EXPORT void __stdcall n_set_delay_mode_list(const UINT CardNo, const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
//EXPORT void __stdcall n_mark_abs_3d(const UINT CardNo, const long X, const long Y, const long Z);
//EXPORT void __stdcall n_mark_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ);
//EXPORT void __stdcall n_mark_abs(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_mark_rel(const UINT CardNo, const long dX, const long dY);
//EXPORT void __stdcall n_jump_abs_3d(const UINT CardNo, const long X, const long Y, const long Z);
//EXPORT void __stdcall n_jump_rel_3d(const UINT CardNo, const long dX, const long dY, const long dZ);
//EXPORT void __stdcall n_jump_abs(const UINT CardNo, const long X, const long Y);
//EXPORT void __stdcall n_jump_rel(const UINT CardNo, const long dX, const long dY);


#if defined(__cplusplus)
}      //  extern "C"
#endif //defined(__cplusplus)
